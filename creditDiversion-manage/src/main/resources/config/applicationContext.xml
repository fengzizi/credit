<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"> <!-- jdbc配置 -->

    <!-- 启用基于注解 -->
    <context:annotation-config/>
    <!-- jdbc配置 -->
    <context:property-placeholder location="classpath:config/jdbc.properties"/>
    <!-- 自动将Service层注入 -->
    <context:component-scan base-package="com.credit.diversion.service"/>
    <!-- 自动将dao层注入 -->
    <context:component-scan base-package="com.credit.diversion.dao"/>
    <!-- dbcp数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--这里如果写成${jdbc.driver}，就会出现加载jdbc驱动失败的问题，暂时不清楚什么原因-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 连接池最大使用连接数 -->
        <property name="maxActive" value="20"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="1"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 连接池最大空闲 -->
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="3"/>
        <!-- 自动清除无用连接 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 清除无用连接的等待时间 -->
        <property name="removeAbandonedTimeout" value="180"/>
        <!-- 连接属性 -->
        <property name="connectionProperties" value="clientEncoding=UTF-8"/>
    </bean>
    <!-- mybatis的配置文件 -->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <!-- 配置数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置Mybatis配置文件 -->
        <property name="configLocation" value="classpath:config/mybatis-config.xml"/>
        <!-- 自动扫描Xml文件位置 -->
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
        <!-- 配置包别名 支持通配符*或者;分割 -->
        <property name="typeAliasesPackage" value="com.baomidou.springmvc.model"/>
        <!-- 插件配置 -->
        <property name="plugins">
            <array>
                <!-- 分页插件配置 -->
                <bean id="paginationInterceptor" class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
                    <property name="dialectType" value="mysql"/>
                </bean>
            </array>
        </property>
        <!-- MP全局配置注入 -->
        <property name="globalConfig" ref="globalConfig"/>
    </bean>
    <!-- 定义MP全局策略 -->
    <bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
        <property name="idType" value="2"/>
        <property name="dbType" value="mysql"/>
        <!-- 全局表为下划线命名设置true -->
        <property name="dbColumnUnderline" value="true"/>
    </bean>
    <!-- 加载mapper.xml接口配置文件 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.credit.diversion.dao"/>
    </bean>
    <!-- 使用JDBC事物 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 使用annotation注解方式配置事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--AOP配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" read-only="true" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!--shiro配置-->
    <import resource="classpath*:config/application-shiro.xml"/>
</beans>